//
// Base styles
// =============================================================================

* {
  margin: 0;
  padding: 0;
}

*,
::before,
::after {
  border-style: solid;
  border-width: 0;
}

// Remove the tapping delay from clickable elements
a,
area,
button,
input,
label,
select,
textarea,
[tabindex] { touch-action: manipulation; }

// Use current current as the default fill of svg elements
svg { fill: currentColor; }

// Specify the progress cursor of updating elements
[aria-busy="true"] { cursor: progress; }

// Specify the pointer cursor of trigger elements
[aria-controls] { cursor: pointer; }

// Specify the unstyled cursor of disabled, not-editable, or otherwise inoperable elements
[aria-disabled] { cursor: default; }

// Specify the style of visually hidden yet accessible elements
[hidden][aria-hidden="false"] {
  clip: rect(0 0 0 0);
  display: inherit;
  position: absolute;

  &:focus { clip: auto; }
}

// Specify the root styles of the document
:root {
  background-color: getColor(background, root);
  box-sizing: $box-sizing;
  color: getColor(text, base);
  cursor: $default-cursor;
  font: if(font-base-size == 16, 100%, pxToEm($font-base-size)) / #{$line-height} $font-family;

  @media (max-width: $bp-extra-small) { font-size: 90%; }
}

audio,
canvas,
iframe,
img,
svg,
video { vertical-align: middle; }

::selection {
  background-color: getColor(state, selection); // required when declaring ::selection
  color: getColor(text, inverted);
  text-shadow: none;
}

hr {
  border: 0;
  border-top: 1px solid getColor(base, border);
  display: block;
  height: 1px;
  margin: unitSize(2) 0;
}

figcaption { color: getColor(text, secondary); }
